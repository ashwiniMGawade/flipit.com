{
  "Resources": {
    "MemcachedNetworkAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "MemcachedNetworkAclEntryInbound0": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "VpcCidrBlockFirstHalf"
              },
              ".8.0/24"
            ]
          ]
        },
        "Egress": false,
        "NetworkAclId": {
          "Ref": "MemcachedNetworkAcl"
        },
        "PortRange": {
          "From": 11211,
          "To": 11211
        },
        "Protocol": 6,
        "RuleAction": "allow",
        "RuleNumber": 1
      }
    },
    "MemcachedNetworkAclEntryInbound1": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "VpcCidrBlockFirstHalf"
              },
              ".9.0/24"
            ]
          ]
        },
        "Egress": false,
        "NetworkAclId": {
          "Ref": "MemcachedNetworkAcl"
        },
        "PortRange": {
          "From": 11211,
          "To": 11211
        },
        "Protocol": 6,
        "RuleAction": "allow",
        "RuleNumber": 2
      }
    },
    "MemcachedNetworkAclEntryInbound2": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "VpcCidrBlockFirstHalf"
              },
              ".10.0/24"
            ]
          ]
        },
        "Egress": false,
        "NetworkAclId": {
          "Ref": "MemcachedNetworkAcl"
        },
        "PortRange": {
          "From": 11211,
          "To": 11211
        },
        "Protocol": 6,
        "RuleAction": "allow",
        "RuleNumber": 3
      }
    },
    "MemcachedNetworkAclEntryOutbound": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": [
        "MemcachedNetworkAcl"
      ],
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": true,
        "NetworkAclId": {
          "Ref": "MemcachedNetworkAcl"
        },
        "PortRange": {
          "From": 0,
          "To": 65535
        },
        "Protocol": -1,
        "RuleAction": "allow",
        "RuleNumber": 1
      }
    },
    "MemcachedNetworkAclEntryReturnInbound": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": [
        "MemcachedNetworkAcl"
      ],
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": false,
        "NetworkAclId": {
          "Ref": "MemcachedNetworkAcl"
        },
        "PortRange": {
          "From": 1024,
          "To": 65535
        },
        "Protocol": 6,
        "RuleAction": "allow",
        "RuleNumber": 4
      }
    },
    "MemcachedSubnetA": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "VpcCidrBlockFirstHalf"
              },
              ".16.0/24"
            ]
          ]
        },
        "VpcId": {
          "Ref": "VPC"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "MemcachedSubnetANetworkAclAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "MemcachedNetworkAcl"
        },
        "SubnetId": {
          "Ref": "MemcachedSubnetA"
        }
      }
    },
    "MemcachedSubnetARouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "DefaultRouteTable"
        },
        "SubnetId": {
          "Ref": "MemcachedSubnetA"
        }
      }
    },
    "MemcachedSubnetB": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "VpcCidrBlockFirstHalf"
              },
              ".17.0/24"
            ]
          ]
        },
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "MemcachedSubnetBNetworkAclAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "MemcachedNetworkAcl"
        },
        "SubnetId": {
          "Ref": "MemcachedSubnetB"
        }
      }
    },
    "MemcachedSubnetBRouteTableAssociation": {
      "Properties": {
        "RouteTableId": {
          "Ref": "DefaultRouteTable"
        },
        "SubnetId": {
          "Ref": "MemcachedSubnetB"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "MemcachedSubnetC": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            2,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "VpcCidrBlockFirstHalf"
              },
              ".18.0/24"
            ]
          ]
        },
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "MemcachedSubnetCNetworkAclAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "MemcachedNetworkAcl"
        },
        "SubnetId": {
          "Ref": "MemcachedSubnetC"
        }
      }
    },
    "MemcachedSubnetCRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "DefaultRouteTable"
        },
        "SubnetId": {
          "Ref": "MemcachedSubnetC"
        }
      }
    },
    "MemcachedSubnetGroup": {
      "Type": "AWS::ElastiCache::SubnetGroup",
      "Properties": {
        "Description": "ElastiCache SubnetGroup for #{name}",
        "SubnetIds": [
          {
            "Ref": "MemcachedSubnetA"
          },
          {
            "Ref": "MemcachedSubnetB"
          },
          {
            "Ref": "MemcachedSubnetC"
          }
        ]
      }
    }
  }
}
